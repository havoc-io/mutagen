// Code generated by protoc-gen-go. DO NOT EDIT.
// source: url/url.proto

package url

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Protocol int32

const (
	Protocol_Local Protocol = 0
	Protocol_SSH   Protocol = 1
	// Enumeration value 2 is reserved for custom protocols.
	// Enumeration values 3-10 are reserved for core protocols.
	Protocol_Docker  Protocol = 11
	Protocol_Kubectl Protocol = 12
)

var Protocol_name = map[int32]string{
	0:  "Local",
	1:  "SSH",
	11: "Docker",
	12: "Kubectl",
}

var Protocol_value = map[string]int32{
	"Local":   0,
	"SSH":     1,
	"Docker":  11,
	"Kubectl": 12,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}

func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce31eacd751d7393, []int{0}
}

type URL struct {
	Protocol             Protocol          `protobuf:"varint,1,opt,name=protocol,proto3,enum=url.Protocol" json:"protocol,omitempty"`
	Username             string            `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Hostname             string            `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Port                 uint32            `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Path                 string            `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Environment          map[string]string `protobuf:"bytes,6,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *URL) Reset()         { *m = URL{} }
func (m *URL) String() string { return proto.CompactTextString(m) }
func (*URL) ProtoMessage()    {}
func (*URL) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce31eacd751d7393, []int{0}
}

func (m *URL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URL.Unmarshal(m, b)
}
func (m *URL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URL.Marshal(b, m, deterministic)
}
func (m *URL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URL.Merge(m, src)
}
func (m *URL) XXX_Size() int {
	return xxx_messageInfo_URL.Size(m)
}
func (m *URL) XXX_DiscardUnknown() {
	xxx_messageInfo_URL.DiscardUnknown(m)
}

var xxx_messageInfo_URL proto.InternalMessageInfo

func (m *URL) GetProtocol() Protocol {
	if m != nil {
		return m.Protocol
	}
	return Protocol_Local
}

func (m *URL) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *URL) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *URL) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *URL) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *URL) GetEnvironment() map[string]string {
	if m != nil {
		return m.Environment
	}
	return nil
}

func init() {
	proto.RegisterEnum("url.Protocol", Protocol_name, Protocol_value)
	proto.RegisterType((*URL)(nil), "url.URL")
	proto.RegisterMapType((map[string]string)(nil), "url.URL.EnvironmentEntry")
}

func init() { proto.RegisterFile("url/url.proto", fileDescriptor_ce31eacd751d7393) }

var fileDescriptor_ce31eacd751d7393 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4a, 0x33, 0x31,
	0x14, 0xc5, 0xbf, 0x69, 0xfa, 0xf7, 0xce, 0x57, 0x09, 0x17, 0x17, 0x63, 0x57, 0x83, 0x22, 0x8c,
	0x82, 0x33, 0x50, 0x17, 0x8a, 0x82, 0x0b, 0xb1, 0x20, 0xd8, 0x85, 0xa4, 0x74, 0xe3, 0x2e, 0x0d,
	0xa1, 0x53, 0x9a, 0x49, 0x4a, 0x9a, 0x14, 0xfa, 0x10, 0xbe, 0xb3, 0x4c, 0xea, 0x54, 0x71, 0x77,
	0xce, 0xf9, 0x9d, 0xc5, 0xbd, 0x07, 0x86, 0xde, 0xaa, 0xc2, 0x5b, 0x95, 0x6f, 0xac, 0x71, 0x06,
	0x89, 0xb7, 0xea, 0xfc, 0xb3, 0x05, 0x64, 0xce, 0xa6, 0x78, 0x05, 0xfd, 0x90, 0x0a, 0xa3, 0x92,
	0x28, 0x8d, 0xb2, 0x93, 0xf1, 0x30, 0xaf, 0xab, 0xef, 0xdf, 0x21, 0x3b, 0x62, 0x1c, 0x41, 0xdf,
	0x6f, 0xa5, 0xd5, 0xbc, 0x92, 0x49, 0x2b, 0x8d, 0xb2, 0x01, 0x3b, 0xfa, 0x9a, 0x95, 0x66, 0xeb,
	0x02, 0x23, 0x07, 0xd6, 0x78, 0x44, 0x68, 0x6f, 0x8c, 0x75, 0x49, 0x3b, 0x8d, 0xb2, 0x21, 0x0b,
	0x3a, 0x64, 0xdc, 0x95, 0x49, 0x27, 0x74, 0x83, 0xc6, 0x47, 0x88, 0xa5, 0xde, 0xad, 0xac, 0xd1,
	0x95, 0xd4, 0x2e, 0xe9, 0xa6, 0x24, 0x8b, 0xc7, 0x67, 0xe1, 0x9a, 0x39, 0x9b, 0xe6, 0x93, 0x1f,
	0x36, 0xd1, 0xce, 0xee, 0xd9, 0xef, 0xf6, 0xe8, 0x09, 0xe8, 0xdf, 0x02, 0x52, 0x20, 0x6b, 0xb9,
	0x0f, 0x6f, 0x0d, 0x58, 0x2d, 0xf1, 0x14, 0x3a, 0x3b, 0xae, 0x7c, 0x73, 0xff, 0xc1, 0x3c, 0xb4,
	0xee, 0xa3, 0xeb, 0x3b, 0xe8, 0x37, 0x2f, 0xe3, 0x00, 0x3a, 0x53, 0x23, 0xb8, 0xa2, 0xff, 0xb0,
	0x07, 0x64, 0x36, 0x7b, 0xa5, 0x11, 0x02, 0x74, 0x5f, 0x8c, 0x58, 0x4b, 0x4b, 0x63, 0x8c, 0xa1,
	0xf7, 0xe6, 0x17, 0x52, 0x38, 0x45, 0xff, 0x3f, 0x5f, 0x7e, 0x5c, 0x2c, 0x57, 0xae, 0xf4, 0x8b,
	0x5c, 0x98, 0xaa, 0x28, 0xf9, 0xce, 0x88, 0x9b, 0x95, 0x29, 0x2a, 0xef, 0xf8, 0x52, 0xea, 0x62,
	0xb3, 0x5e, 0xd6, 0xd3, 0x2f, 0xba, 0x61, 0xc6, 0xdb, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab,
	0x2a, 0x24, 0x26, 0x8c, 0x01, 0x00, 0x00,
}
